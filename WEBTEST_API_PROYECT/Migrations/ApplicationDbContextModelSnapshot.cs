// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WEBTEST_API_PROYECT.Data;

#nullable disable

namespace WEBTEST_API_PROYECT.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WEBTEST_API_PROYECT.Models.TestWeb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdating")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fee")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<int>("SquareMeters")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TestWebs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "",
                            DateCreation = new DateTime(2023, 8, 28, 0, 16, 44, 56, DateTimeKind.Local).AddTicks(7301),
                            DateUpdating = new DateTime(2023, 8, 28, 0, 16, 44, 56, DateTimeKind.Local).AddTicks(7343),
                            Detail = "Detalle de la villa",
                            Fee = 500.0,
                            ImageUrl = "",
                            Name = "Villa real",
                            Pages = 5,
                            SquareMeters = 200
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "Swimming pool, beach access",
                            DateCreation = new DateTime(2023, 8, 28, 4, 16, 44, 56, DateTimeKind.Utc).AddTicks(7347),
                            DateUpdating = new DateTime(2023, 8, 28, 4, 16, 44, 56, DateTimeKind.Utc).AddTicks(7347),
                            Detail = "A sunny vacation spot by the beach",
                            Fee = 800.0,
                            ImageUrl = "https://example.com/sunny-shores.jpg",
                            Name = "Sunny Shores",
                            Pages = 10,
                            SquareMeters = 400
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
